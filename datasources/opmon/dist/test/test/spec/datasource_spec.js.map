{"version":3,"sources":["../../../../src/test/spec/datasource_spec.js"],"names":["_module","require","_q","_q2","_interopRequireDefault","obj","__esModule","default","describe","ctx","beforeEach","$q","backendSrv","templateSrv","ds","Datasource","it","done","query","targets","then","result","expect","data","to","have","length","datasourceRequest","request","when","_request","target","datapoints","replace","series","equal","metricFindQuery","text","value","mapToTextValue","a","b","getTagKeys","type","key","getTagValues"],"mappings":"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","file":"datasource_spec.js","sourcesContent":["\"use strict\";\n\nvar _module = require(\"../module\");\n\nvar _q = require(\"q\");\n\nvar _q2 = _interopRequireDefault(_q);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ndescribe('GenericDatasource', function () {\n    var ctx = {};\n\n    beforeEach(function () {\n        ctx.$q = _q2.default;\n        ctx.backendSrv = {};\n        ctx.templateSrv = {};\n        ctx.ds = new _module.Datasource({}, ctx.$q, ctx.backendSrv, ctx.templateSrv);\n    });\n\n    it('should return an empty array when no targets are set', function (done) {\n        ctx.ds.query({ targets: [] }).then(function (result) {\n            expect(result.data).to.have.length(0);\n            done();\n        });\n    });\n\n    it('should return the server results when a target is set', function (done) {\n        ctx.backendSrv.datasourceRequest = function (request) {\n            return ctx.$q.when({\n                _request: request,\n                data: [{\n                    target: 'X',\n                    datapoints: [1, 2, 3]\n                }]\n            });\n        };\n\n        ctx.templateSrv.replace = function (data) {\n            return data;\n        };\n\n        ctx.ds.query({ targets: ['hits'] }).then(function (result) {\n            expect(result._request.data.targets).to.have.length(1);\n\n            var series = result.data[0];\n            expect(series.target).to.equal('X');\n            expect(series.datapoints).to.have.length(3);\n            done();\n        });\n    });\n\n    it('should return the metric results when a target is null', function (done) {\n        ctx.backendSrv.datasourceRequest = function (request) {\n            return ctx.$q.when({\n                _request: request,\n                data: [\"metric_0\", \"metric_1\", \"metric_2\"]\n            });\n        };\n\n        ctx.templateSrv.replace = function (data) {\n            return data;\n        };\n\n        ctx.ds.metricFindQuery({ target: null }).then(function (result) {\n            expect(result).to.have.length(3);\n            expect(result[0].text).to.equal('metric_0');\n            expect(result[0].value).to.equal('metric_0');\n            expect(result[1].text).to.equal('metric_1');\n            expect(result[1].value).to.equal('metric_1');\n            expect(result[2].text).to.equal('metric_2');\n            expect(result[2].value).to.equal('metric_2');\n            done();\n        });\n    });\n\n    it('should return the metric target results when a target is set', function (done) {\n        ctx.backendSrv.datasourceRequest = function (request) {\n            var target = request.data.target;\n            var result = [target + \"_0\", target + \"_1\", target + \"_2\"];\n\n            return ctx.$q.when({\n                _request: request,\n                data: result\n            });\n        };\n\n        ctx.templateSrv.replace = function (data) {\n            return data;\n        };\n\n        ctx.ds.metricFindQuery('search').then(function (result) {\n            expect(result).to.have.length(3);\n            expect(result[0].text).to.equal('search_0');\n            expect(result[0].value).to.equal('search_0');\n            expect(result[1].text).to.equal('search_1');\n            expect(result[1].value).to.equal('search_1');\n            expect(result[2].text).to.equal('search_2');\n            expect(result[2].value).to.equal('search_2');\n            done();\n        });\n    });\n\n    it('should return the metric results when the target is an empty string', function (done) {\n        ctx.backendSrv.datasourceRequest = function (request) {\n            return ctx.$q.when({\n                _request: request,\n                data: [\"metric_0\", \"metric_1\", \"metric_2\"]\n            });\n        };\n\n        ctx.templateSrv.replace = function (data) {\n            return data;\n        };\n\n        ctx.ds.metricFindQuery('').then(function (result) {\n            expect(result).to.have.length(3);\n            expect(result[0].text).to.equal('metric_0');\n            expect(result[0].value).to.equal('metric_0');\n            expect(result[1].text).to.equal('metric_1');\n            expect(result[1].value).to.equal('metric_1');\n            expect(result[2].text).to.equal('metric_2');\n            expect(result[2].value).to.equal('metric_2');\n            done();\n        });\n    });\n\n    it('should return the metric results when the args are an empty object', function (done) {\n        ctx.backendSrv.datasourceRequest = function (request) {\n            return ctx.$q.when({\n                _request: request,\n                data: [\"metric_0\", \"metric_1\", \"metric_2\"]\n            });\n        };\n\n        ctx.templateSrv.replace = function (data) {\n            return data;\n        };\n\n        ctx.ds.metricFindQuery().then(function (result) {\n            expect(result).to.have.length(3);\n            expect(result[0].text).to.equal('metric_0');\n            expect(result[0].value).to.equal('metric_0');\n            expect(result[1].text).to.equal('metric_1');\n            expect(result[1].value).to.equal('metric_1');\n            expect(result[2].text).to.equal('metric_2');\n            expect(result[2].value).to.equal('metric_2');\n            done();\n        });\n    });\n\n    it('should return the metric target results when the args are a string', function (done) {\n        ctx.backendSrv.datasourceRequest = function (request) {\n            var target = request.data.target;\n            var result = [target + \"_0\", target + \"_1\", target + \"_2\"];\n\n            return ctx.$q.when({\n                _request: request,\n                data: result\n            });\n        };\n\n        ctx.templateSrv.replace = function (data) {\n            return data;\n        };\n\n        ctx.ds.metricFindQuery('search').then(function (result) {\n            expect(result).to.have.length(3);\n            expect(result[0].text).to.equal('search_0');\n            expect(result[0].value).to.equal('search_0');\n            expect(result[1].text).to.equal('search_1');\n            expect(result[1].value).to.equal('search_1');\n            expect(result[2].text).to.equal('search_2');\n            expect(result[2].value).to.equal('search_2');\n            done();\n        });\n    });\n\n    it('should return data as text and as value', function (done) {\n        var result = ctx.ds.mapToTextValue({ data: [\"zero\", \"one\", \"two\"] });\n\n        expect(result).to.have.length(3);\n        expect(result[0].text).to.equal('zero');\n        expect(result[0].value).to.equal('zero');\n        expect(result[1].text).to.equal('one');\n        expect(result[1].value).to.equal('one');\n        expect(result[2].text).to.equal('two');\n        expect(result[2].value).to.equal('two');\n        done();\n    });\n\n    it('should return text as text and value as value', function (done) {\n        var data = [{ text: \"zero\", value: \"value_0\" }, { text: \"one\", value: \"value_1\" }, { text: \"two\", value: \"value_2\" }];\n\n        var result = ctx.ds.mapToTextValue({ data: data });\n\n        expect(result).to.have.length(3);\n        expect(result[0].text).to.equal('zero');\n        expect(result[0].value).to.equal('value_0');\n        expect(result[1].text).to.equal('one');\n        expect(result[1].value).to.equal('value_1');\n        expect(result[2].text).to.equal('two');\n        expect(result[2].value).to.equal('value_2');\n        done();\n    });\n\n    it('should return data as text and index as value', function (done) {\n        var data = [{ a: \"zero\", b: \"value_0\" }, { a: \"one\", b: \"value_1\" }, { a: \"two\", b: \"value_2\" }];\n\n        var result = ctx.ds.mapToTextValue({ data: data });\n\n        expect(result).to.have.length(3);\n        expect(result[0].text).to.equal(data[0]);\n        expect(result[0].value).to.equal(0);\n        expect(result[1].text).to.equal(data[1]);\n        expect(result[1].value).to.equal(1);\n        expect(result[2].text).to.equal(data[2]);\n        expect(result[2].value).to.equal(2);\n        done();\n    });\n\n    it('should support tag keys', function (done) {\n        var data = [{ 'type': 'string', 'text': 'One', 'key': 'one' }, { 'type': 'string', 'text': 'two', 'key': 'Two' }];\n\n        ctx.backendSrv.datasourceRequest = function (request) {\n            return ctx.$q.when({\n                _request: request,\n                data: data\n            });\n        };\n\n        ctx.ds.getTagKeys().then(function (result) {\n            expect(result).to.have.length(2);\n            expect(result[0].type).to.equal(data[0].type);\n            expect(result[0].text).to.equal(data[0].text);\n            expect(result[0].key).to.equal(data[0].key);\n            expect(result[1].type).to.equal(data[1].type);\n            expect(result[1].text).to.equal(data[1].text);\n            expect(result[1].key).to.equal(data[1].key);\n            done();\n        });\n    });\n\n    it('should support tag values', function (done) {\n        var data = [{ 'key': 'eins', 'text': 'Eins!' }, { 'key': 'zwei', 'text': 'Zwei' }, { 'key': 'drei', 'text': 'Drei!' }];\n\n        ctx.backendSrv.datasourceRequest = function (request) {\n            return ctx.$q.when({\n                _request: request,\n                data: data\n            });\n        };\n\n        ctx.ds.getTagValues().then(function (result) {\n            expect(result).to.have.length(3);\n            expect(result[0].text).to.equal(data[0].text);\n            expect(result[0].key).to.equal(data[0].key);\n            expect(result[1].text).to.equal(data[1].text);\n            expect(result[1].key).to.equal(data[1].key);\n            expect(result[2].text).to.equal(data[2].text);\n            expect(result[2].key).to.equal(data[2].key);\n            done();\n        });\n    });\n});\n//# sourceMappingURL=datasource_spec.js.map\n"]}